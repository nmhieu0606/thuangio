---
// Components
import Layout from "../../../layouts/Layout.astro";

import Container from "../../../components/Container.astro";
import Error404 from "../../../components/error404.astro";
import Pagination2 from "../../../components/Pagination_2.astro";
import Blog from "../../../components/Blog.astro";
// Buttons/Links data
// Interfaces
import type AllPost from "../../../interfaces/AllPost";
import CategoryCloud from "../../../components/CategoryCloud.astro";
// Fetch products data
//const response = await fetch(`${import.meta.env.PUBLIC_SERVER_URL}/api/products/?populate=*`);

const url = new URL(Astro.request.url);
const page = url.searchParams.get("page") || 1;
const response = await fetch(
  `${
    import.meta.env.PUBLIC_SERVER_URL
  }/api/posts?filters[createdBy][username][$eq]=${
    Astro.params.author
  }&sort[0]=createdAt%3Adesc&populate=*&pagination[page]=${page}&pagination[pageSize]=3`
);
const data = await response.json();
let err=true;
let posts = null;
if (data.data[0] != null) {
  err=false;
  const pageCount = data.meta.pagination.pageCount;
  const currentPage = data.meta.pagination.page;

  posts = data.data.map(
    (item: {
      id: number;
      attributes: {
        title: string;
        content: string;
        description: string;
        slug: string;
        image: { data: { attributes: { url: string } } };
        category: { data: { attributes: { name: string; slug: string } } };
      };
    }) => {
      return {
        title: item.attributes.title,
        description: item.attributes.description,
        slug: item.attributes.slug,
        image: item.attributes.image.data.attributes.url,
        href: "/blog/" + item.attributes.slug,
      };
    }
  );
  if (currentPage>1) {
    var temp_prev = currentPage - 1;
    var prev = `/author/${Astro.params.author}?page=` + temp_prev;
} if(currentPage<pageCount) {
  var temp_next = currentPage + 1;
  var next = `/author/${Astro.params.author}?page=` + temp_next;
}
}
---

<Layout title="blog">
  <Container>
   {
    (!err&& <div class="grid sm:grid-cols-3 md:grid-cols-3 gap-3 mt-20">
      {posts.map((post: AllPost) => <Blog post={post} />)}
    </div>
    <div
      class="gird sm:grid-cols-3 md:grid-cols-2 lg:gird-cols-2 gap-2 items-center text-center mt-5">
      <Pagination2 prev={prev} next={next} />
    </div>
    <CategoryCloud/>
    )
   
   }
   {
    (err&&<Error404/>)
   }

  </Container>
</Layout>
