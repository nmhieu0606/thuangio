---
import AppFooter from "../components/AppFooter.astro";
import AppHeader from "../components/AppHeader.astro"
import Navbar from "../components/navbar/navbar.astro";
import Footer from "../components/footer.astro";
---


<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content="Template built with tailwindcss using Tailus blocks v2">
		<script is:inline>
			// It's best to inline this in `head` to avoid FOUC (flash of unstyled content) when changing pages or themes
			if (
			  localStorage.getItem("color-theme") === "dark" ||
			  (!("color-theme" in localStorage) &&
				window.matchMedia("(prefers-color-scheme: dark)").matches)
			) {
			  document.documentElement.classList.add("dark");
			} else {
			  document.documentElement.classList.remove("dark");
			}
		  </script>
		  <script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.4/flowbite.min.js"></script>
		<title>Tailus astro theme</title>

		<link href="https://fonts.googleapis.com/css2?family=Urbanist:wght@400;500;600;700&display=swap" rel="stylesheet">

	</head>
	<body class="bg-gray-300 dark:bg-gray-900">
		
		<Navbar/>
		<br>
		<slot />
		<Footer/>
	</body>
</html>
<style>
	html {
		font-family: Urbanist, sans-serif;
		scroll-behavior: smooth;
	}

	body {
		margin: 0;
	}
</style>

<style is:global>
	/* Improve Page speed */
	/* https://css-tricks.com/almanac/properties/c/content-visibility/ */

	@tailwind base;
	@tailwind components;
	@tailwind utilities;
	.display-none {
	  @apply hidden;
	}
	body {
	  height: 500px;
	}
  </style>

<script>
      
	var themeToggleDarkIcon = document.getElementById(
	  "theme-toggle-dark-icon"
	);
	var themeToggleLightIcon = document.getElementById(
	  "theme-toggle-light-icon"
	);

	// Change the icons inside the button based on previous settings
	if (
	  localStorage.getItem("color-theme") === "dark" ||
	  (!("color-theme" in localStorage) &&
		window.matchMedia("(prefers-color-scheme: dark)").matches)
	) {
	  themeToggleLightIcon.classList.remove("hidden");
	} else {
	  themeToggleDarkIcon.classList.remove("hidden");
	}

	var themeToggleBtn = document.getElementById("theme-toggle");

	themeToggleBtn.addEventListener("click", function () {
	  // toggle icons inside button
	  themeToggleDarkIcon.classList.toggle("hidden");
	  themeToggleLightIcon.classList.toggle("hidden");

	  // if set via local storage previously
	  if (localStorage.getItem("color-theme")) {
		if (localStorage.getItem("color-theme") === "light") {
		  document.documentElement.classList.add("dark");
		  localStorage.setItem("color-theme", "dark");
		} else {
		  document.documentElement.classList.remove("dark");
		  localStorage.setItem("color-theme", "light");
		}

		// if NOT set via local storage previously
	  } else {
		if (document.documentElement.classList.contains("dark")) {
		  document.documentElement.classList.remove("dark");
		  localStorage.setItem("color-theme", "light");
		} else {
		  document.documentElement.classList.add("dark");
		  localStorage.setItem("color-theme", "dark");
		}
	  }
	});
  </script>