---
import Container from "./Container.astro";

const res = await fetch(
  `${import.meta.env.PUBLIC_SERVER_URL}/api/nav?populate=*`
);
const data = await res.json();
const nav = data.data.attributes.navitem.map(
  (item: {
    id: number;
    attributes: {
      navitem: {
        data: {
          title: string;
          href: string;
          link?: {
            data: {
              title: string;
              href: string;
            };
          };
        };
      };
    };
  }) => {
    return {
      title: item.title,
      href: item.href,
      link: item.Link,
    };
  }
);
---

<header>
  <nav
    class="bg-white px-2 sm:px-4 dark:bg-gray-900 fixed w-full z-20 top-0 left-0 border-b border-gray-200 dark:border-gray-600"
  >
    <Container>
      <div
        class="flex flex-wrap items-center justify-between py-2 gap-6 md:py-4 md:gap-0 relative"
      >
        <input
          aria-hidden="true"
          type="checkbox"
          name="toggle_nav"
          id="toggle_nav"
          class="hidden peer"
        />
        <div class="relative z-20 w-full flex justify-between lg:w-max md:px-0">
          <a href="/" aria-label="logo" class="flex space-x-2 items-center">
            <img src="/tw.png" class="h-6 mr-3 sm:h-9" alt="Flowbite Logo" />
            <span class="text-2xl font-bold text-gray-900 dark:text-white"
              >Tailwind</span
            >
          </a>

          <div class="relative flex items-center lg:hidden max-h-10">
            <label
              role="button"
              for="toggle_nav"
              aria-label="humburger"
              id="hamburger"
              class="relative p-6 -mr-6"
            >
              <div
                aria-hidden="true"
                id="line"
                class="m-auto h-0.5 w-5 rounded bg-sky-900 dark:bg-gray-300 transition duration-300"
              >
              </div>
              <div
                aria-hidden="true"
                id="line2"
                class="m-auto mt-2 h-0.5 w-5 rounded bg-sky-900 dark:bg-gray-300 transition duration-300"
              >
              </div>
            </label>
          </div>
        </div>
        <div
          aria-hidden="true"
          class="fixed z-10 inset-0 h-screen w-screen bg-white/70 backdrop-blur-2xl origin-bottom scale-y-0 transition duration-500 peer-checked:origin-top peer-checked:scale-y-100 lg:hidden dark:bg-gray-900/70"
        >
        </div>
        <div
          class="flex-col z-20 flex-wrap gap-6 p-8 rounded-3xl border border-gray-100 bg-white shadow-2xl shadow-gray-600/10 justify-end w-full invisible opacity-0 translate-y-1 absolute top-full left-0 transition-all duration-300 scale-95 origin-top lg:relative lg:scale-100 lg:peer-checked:translate-y-0 lg:translate-y-0 lg:flex lg:flex-row lg:items-center lg:gap-0 lg:p-0 lg:bg-transparent lg:w-7/12 lg:visible lg:opacity-100 lg:border-none peer-checked:scale-100 peer-checked:opacity-100 peer-checked:visible lg:shadow-none dark:shadow-none dark:bg-gray-900 dark:border-gray-700"
        >
          <div
            class="text-gray-600 dark:text-gray-300 lg:pr-4 lg:w-auto w-full lg:pt-0"
          >
            <ul
              class="tracking-wide font-medium lg:text-sm flex-col flex lg:flex-row gap-6 lg:gap-0"
            >
              {
                nav.map((item) => (
                  <>
                    {item.link && (
                      <li>
                        <button
                          type="button"
                          data-dropdown-toggle="language-dropdown-menu"
                          class="inline-flex dark:text-white py-2.5 items-center justify-center text-sm text-gray-700 rounded-lg cursor-pointer hover:text-gray-900 hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white"
                        >
                          {item.title}
                        </button>

                        <div
                          class="z-50 hidden my-4 text-base list-none bg-gray-100 divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700"
                          id="language-dropdown-menu"
                        >
                          <ul class="py-2" role="none">
                            {item.link.map((i) => (
                              <li>
                                <a
                                  href={i.href}
                                  class="block px-4 py-2.5 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400  dark:hover:text-white"
                                  role="menuitem"
                                >
                                  <div class="inline-flex items-center">
                                    {i.title}
                                  </div>
                                </a>
                              </li>
                            ))}
                            
                          </ul>
                        </div>
                        <button
                          data-collapse-toggle="mobile-menu-language-select"
                          type="button"
                          class="inline-flex items-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                          aria-controls="mobile-menu-language-select"
                          aria-expanded="false"
                        >
                          <span class="sr-only">Open main menu</span>
                        </button>
                      </li>
                    )}
                    {
                        !item.link&&(
                        <li>
                            <a
                            href={item.href}
                            class="block md:px-4 py-2.5 transition hover:text-primary"
                            >
                            <span>{item.title}</span>
                            </a>
                        </li>

                        )
                    }
                    
                  </>
                ))
              }
              <li>
                <button id="theme-toggle" type="button" class="text-gray-500 bg-gray-600 dark:text-gray-400 dark:bg-slate-200 hover:bg-gray-500 dark:hover:bg-white focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5">
                    <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="white" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
                    <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="black" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
                </button>
            </li>

              
              
            </ul>
          </div>
        </div>
      </div>
    </Container>
  </nav>
</header>

<style>
  #toggle_nav:checked ~ div #hamburger #line {
    @apply rotate-45 translate-y-1.5;
  }

  #toggle_nav:checked ~ div #hamburger #line2 {
    @apply -rotate-45 -translate-y-1;
  }
</style>
